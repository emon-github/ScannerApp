@model PagedList.IPagedList<ScannerApp.Models.UserListViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Users";
}

<h2>Clients</h2>

@*<p>
     @Html.ActionLink("New User", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })
    <a href="@Url.Action( "Register","Account")" class="btn btn-warning" data-toggle="tooltip" title="New User">
        New User
        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
    </a>
</p>*@

@using (Html.BeginForm())
{
    <p>
        Search: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("User Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            @* @Html.DisplayNameFor(model => model.UserName)*@
        </th>
        <th>
            @Html.ActionLink("Phone", "Index", new { sortOrder = ViewBag.PhoneSortParm, currentFilter = ViewBag.CurrentFilter })
            @* @Html.DisplayNameFor(model => model.Phone)*@
        </th>
        <th>
            Email
        </th>
        <th>
            @Html.ActionLink("Role", "Index", new { sortOrder = ViewBag.RoleSortParm, currentFilter = ViewBag.CurrentFilter })
            @* @Html.DisplayNameFor(model => model.Role)*@
        </th>
        <th>
            <a href="@Url.Action( "Register","Account")" class="btn btn-warning btn-xs" data-toggle="tooltip" title="New User">
                User
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
            </a>
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role)
            </td>
            <td>
                <a href="@Url.Action("Edit", "UserList",new { id = item.UserID })" class="btn btn-info btn-xs" data-toggle="tooltip" title="Edit">
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                </a>
                <a href="@Url.Action("Delete", "UserList",new { id = item.UserID })" class="btn btn-danger btn-xs" data-toggle="tooltip" title="Delete">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
                </a>
            </td>
        </tr>
    }
</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
